{
  "name": "order-list",
  "type": "registry:ui",
  "dependencies": [
    "clsx"
  ],
  "registryDependencies": [
    "streamable",
    "badge",
    "button-link",
    "product-card",
    "cursor-pagination",
    "skeleton"
  ],
  "files": [
    {
      "path": "vibes/soul/sections/order-list/index.tsx",
      "content": "import { clsx } from 'clsx';\n\nimport { Stream, Streamable } from '@/vibes/soul/lib/streamable';\nimport { Badge } from '@/vibes/soul/primitives/badge';\nimport { ButtonLink } from '@/vibes/soul/primitives/button-link';\nimport { CursorPagination, CursorPaginationInfo } from '@/vibes/soul/primitives/cursor-pagination';\nimport {\n  type Product,\n  ProductCard,\n  ProductCardSkeleton,\n} from '@/vibes/soul/primitives/product-card';\nimport * as Skeleton from '@/vibes/soul/primitives/skeleton';\n\nexport interface Order {\n  id: string;\n  totalPrice: string;\n  status: string;\n  href: string;\n  lineItems: Product[];\n}\n\nexport interface OrderListProps {\n  className?: string;\n  title?: string;\n  orders: Streamable<Order[]>;\n  paginationInfo?: Streamable<CursorPaginationInfo>;\n  orderNumberLabel?: string;\n  totalLabel?: string;\n  viewDetailsLabel?: string;\n  emptyStateTitle?: string;\n  emptyStateActionLabel?: string;\n  emptyStateActionHref?: string;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --order-list-title-font-family: var(--font-family-heading);\n *   --order-list-label-font-family: var(--font-family-mono);\n *   --order-list-title: var(--foreground);\n *   --order-list-label: var(--contrast-500);\n *   --order-list-info: var(--foreground);\n *   --order-list-border: var(--contrast-100);\n *   --order-list-empty-state-title: var(--foreground);\n * }\n * ```\n */\nexport function OrderList({\n  className,\n  title = 'Orders',\n  orders: streamableOrders,\n  paginationInfo,\n  orderNumberLabel = 'Order #',\n  totalLabel = 'Total',\n  viewDetailsLabel = 'View details',\n  emptyStateTitle = 'You don&apos;t have any orders',\n  emptyStateActionLabel = 'Shop now',\n  emptyStateActionHref = '/',\n}: OrderListProps) {\n  return (\n    <div className=\"group/order-list @container\">\n      <h1 className=\"mb-8 hidden font-(family-name:--order-list-title-font-family,var(--font-family-heading)) text-4xl leading-tight font-medium tracking-tight text-(--order-list-title,var(--foreground)) @2xl:block\">\n        {title}\n      </h1>\n      <Stream fallback={<OrderListSkeleton />} value={streamableOrders}>\n        {(orders) => {\n          if (orders.length === 0) {\n            return (\n              <OrderListEmptyState\n                emptyStateActionHref={emptyStateActionHref}\n                emptyStateActionLabel={emptyStateActionLabel}\n                emptyStateTitle={emptyStateTitle}\n              />\n            );\n          }\n\n          return (\n            <div className=\"@container\">\n              {orders.map((order) => (\n                <div\n                  className={clsx(\n                    'border-t border-(--order-list-border,var(--contrast-100)) pt-5 pb-6 last:border-b @lg:pt-6 @lg:pb-10',\n                    className,\n                  )}\n                  key={order.id}\n                >\n                  <div className=\"flex flex-col justify-between gap-x-10 gap-y-4 @lg:flex-row\">\n                    <div className=\"flex items-start gap-x-12 gap-y-4\">\n                      <div>\n                        <span className=\"font-(family-name:--order-list-label-font-family,var(--font-family-mono)) text-xs leading-normal text-(--order-list-label,var(--contrast-500)) uppercase\">\n                          {orderNumberLabel}\n                        </span>\n                        <span className=\"block text-lg leading-normal font-semibold text-(--order-list-info,var(--foreground))\">\n                          {order.id}\n                        </span>\n                      </div>\n                      <div>\n                        <span className=\"font-(family-name:--order-list-label-font-family,var(--font-family-mono)) text-xs leading-normal text-(--order-list-label,var(--contrast-500)) uppercase\">\n                          {totalLabel}\n                        </span>\n                        <span className=\"block text-lg leading-normal font-semibold text-(--order-list-info,var(--foreground))\">\n                          {order.totalPrice}\n                        </span>\n                      </div>\n                      <Badge className=\"mt-0.5\">{order.status}</Badge>\n                    </div>\n                    <ButtonLink href={order.href} size=\"small\">\n                      {viewDetailsLabel}\n                    </ButtonLink>\n                  </div>\n                  <div className=\"mt-6 flex gap-4 overflow-hidden [mask-image:linear-gradient(to_right,_black_0%,_black_80%,_transparent_98%)]\">\n                    {order.lineItems.map((lineItem) => (\n                      <ProductCard\n                        className=\"shrink-0 basis-32 @lg:basis-40\"\n                        key={lineItem.id}\n                        product={lineItem}\n                      />\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          );\n        }}\n      </Stream>\n      {paginationInfo && <CursorPagination info={paginationInfo} />}\n    </div>\n  );\n}\n\nfunction OrderListSkeleton() {\n  return (\n    <Skeleton.Root className=\"group-has-[[data-pending]]/order-list:animate-pulse\" pending>\n      {Array.from({ length: 3 }).map((_, id) => (\n        <div\n          className=\"border-t border-(--order-list-border,var(--contrast-100)) pt-5 pb-6 last:border-b @lg:pt-6 @lg:pb-10\"\n          data-pending\n          key={id}\n        >\n          <div className=\"flex flex-col justify-between gap-x-10 gap-y-4 @lg:flex-row\">\n            <div className=\"flex flex-wrap items-start gap-x-12 gap-y-4\">\n              <div>\n                <Skeleton.Text characterCount={7} className=\"rounded-xs text-xs\" />\n                <Skeleton.Text characterCount={7} className=\"rounded-sm text-lg\" />\n              </div>\n              <div>\n                <Skeleton.Text characterCount={8} className=\"rounded-xs text-xs\" />\n                <Skeleton.Text characterCount={6} className=\"rounded-sm text-lg\" />\n              </div>\n              <Skeleton.Box className=\"mt-0.5 h-[22px] w-[55px] rounded\" />\n            </div>\n            <Skeleton.Box className=\"h-[43px] min-w-[12ch] gap-x-2 rounded-full px-4 py-2.5\" />\n          </div>\n          <div className=\"mt-6 flex gap-4 overflow-hidden [mask-image:linear-gradient(to_right,_black_0%,_black_80%,_transparent_98%)]\">\n            {Array.from({ length: 8 }).map((__, idx) => (\n              <ProductCardSkeleton className=\"shrink-0 basis-32 @lg:basis-40\" key={idx} />\n            ))}\n          </div>\n        </div>\n      ))}\n    </Skeleton.Root>\n  );\n}\n\nfunction OrderListEmptyState({\n  emptyStateTitle,\n  emptyStateActionLabel,\n  emptyStateActionHref = '/',\n}: Pick<OrderListProps, 'emptyStateTitle' | 'emptyStateActionLabel' | 'emptyStateActionHref'>) {\n  return (\n    <div className=\"@container\">\n      <div className=\"border-t border-(--order-list-border,var(--contrast-100)) py-20\">\n        <header className=\"mx-auto flex max-w-2xl flex-col items-center gap-5\">\n          <h2 className=\"text-center text-lg font-semibold text-(--order-list-empty-state-title,var(--foreground))\">\n            {emptyStateTitle}\n          </h2>\n          <ButtonLink className=\"w-fit\" href={emptyStateActionHref}>\n            {emptyStateActionLabel}\n          </ButtonLink>\n        </header>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/sections/order-list/index.tsx"
    }
  ]
}