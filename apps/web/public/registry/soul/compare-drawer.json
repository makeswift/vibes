{
  "name": "compare-drawer",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-portal",
    "lucide-react",
    "nuqs"
  ],
  "registryDependencies": [
    "button-link",
    "toaster"
  ],
  "files": [
    {
      "path": "vibes/soul/primitives/compare-drawer/index.tsx",
      "content": "'use client';\n\nimport * as Portal from '@radix-ui/react-portal';\nimport { ArrowRight, X } from 'lucide-react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useQueryState } from 'nuqs';\nimport {\n  createContext,\n  ReactNode,\n  startTransition,\n  useContext,\n  useEffect,\n  useOptimistic,\n} from 'react';\n\nimport { ButtonLink } from '@/vibes/soul/primitives/button-link';\nimport { toast } from '@/vibes/soul/primitives/toaster';\n\nimport { compareParser } from './loader';\n\ninterface OptimisticAction {\n  type: 'add' | 'remove';\n  item: CompareDrawerItem;\n}\n\ninterface CompareDrawerContext {\n  optimisticItems: CompareDrawerItem[];\n  setOptimisticItems: (action: OptimisticAction) => void;\n  maxItems?: number;\n}\n\nexport const CompareDrawerContext = createContext<CompareDrawerContext | undefined>(undefined);\n\nexport interface CompareDrawerProviderProps {\n  children: ReactNode;\n  items: CompareDrawerItem[];\n  maxItems?: number;\n  maxCompareLimitMessage?: string;\n}\n\nexport function CompareDrawerProvider({\n  children,\n  items,\n  maxItems = 12,\n  maxCompareLimitMessage = \"You've reached the maximum number of products for comparison. Remove a product to add a new one.\",\n}: CompareDrawerProviderProps) {\n  useEffect(() => {\n    if (items.length >= maxItems) {\n      toast.warning(maxCompareLimitMessage);\n    }\n  }, [items.length, maxItems, maxCompareLimitMessage]);\n\n  const [optimisticItems, setOptimisticItems] = useOptimistic(\n    items,\n    (state: CompareDrawerItem[], { type, item }: OptimisticAction) => {\n      switch (type) {\n        case 'add':\n          return [...state, item].sort((a, b) => {\n            const numA = Number(a.id);\n            const numB = Number(b.id);\n\n            if (!Number.isNaN(numA) && !Number.isNaN(numB)) {\n              return numA - numB;\n            }\n\n            if (!Number.isNaN(numA)) return -1;\n            if (!Number.isNaN(numB)) return 1;\n\n            return a.id < b.id ? -1 : 1;\n          });\n\n        case 'remove':\n          return state.filter((i) => i.id !== item.id);\n\n        default:\n          return state;\n      }\n    },\n  );\n\n  return (\n    <CompareDrawerContext value={{ optimisticItems, setOptimisticItems, maxItems }}>\n      {children}\n    </CompareDrawerContext>\n  );\n}\n\nexport function useCompareDrawer() {\n  const context = useContext(CompareDrawerContext);\n\n  if (context === undefined) {\n    throw new Error('useCompareDrawer must be used within a CompareDrawerProvider');\n  }\n\n  return context;\n}\n\nfunction getInitials(name: string): string {\n  return name\n    .split(' ')\n    .map((word) => word[0])\n    .join('')\n    .toUpperCase()\n    .slice(0, 2);\n}\n\ninterface CompareDrawerItem {\n  id: string;\n  image?: { src: string; alt: string };\n  href: string;\n  title: string;\n}\n\nexport interface CompareDrawerProps {\n  href?: string;\n  paramName?: string;\n  submitLabel?: string;\n  removeLabel?: string;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --compare-drawer-background: var(--background);\n *   --compare-drawer-font-family: var(--font-family-body);\n *   --compare-drawer-card-focus: var(--primary);\n *   --compare-drawer-card-border: var(--contrast-100);\n *   --compare-drawer-card-background: var(--background);\n *   --compare-drawer-card-background-hover: var(--contrast-100);\n *   --compare-drawer-card-image-background: var(--contrast-100);\n *   --compare-drawer-empty-image-text: var(--primary-shadow);\n *   --compare-drawer-card-text: var(--foreground);\n *   --compare-drawer-dismiss-border: var(--contast-100);\n *   --compare-drawer-dismiss-border-hover: var(--contast-200);\n *   --compare-drawer-dismiss-background: var(--background);\n *   --compare-drawer-dismiss-background-hover: var(--contrast-100);\n *   --compare-drawer-dismiss-icon: var(--contrast-400);\n *   --compare-drawer-dismiss-icon-hover: var(--foreground);\n * }\n * ```\n */\nexport function CompareDrawer({\n  href = '/compare',\n  paramName = 'compare',\n  submitLabel = 'Compare',\n  removeLabel = 'Remove',\n}: CompareDrawerProps) {\n  const [params, setParam] = useQueryState(paramName, compareParser);\n\n  const { optimisticItems, setOptimisticItems } = useCompareDrawer();\n\n  return (\n    optimisticItems.length > 0 && (\n      <Portal.Root asChild>\n        <div className=\"@container sticky bottom-0 z-10 w-full border-t border-(--compare-drawer-card-border,var(--contrast-100)) bg-(--compare-drawer-background,var(--background)) px-3 py-4 @md:py-5 @xl:px-6 @5xl:px-10\">\n          <div className=\"mx-auto flex w-full max-w-7xl flex-col items-start justify-end gap-x-3 gap-y-4 @md:flex-row\">\n            <div className=\"flex flex-1 flex-wrap justify-end gap-4\">\n              {optimisticItems.map((item) => (\n                <div className=\"relative\" key={item.id}>\n                  <Link\n                    className=\"group relative flex max-w-56 items-center overflow-hidden rounded-xl border border-(--compare-drawer-link-border,var(--contrast-100)) bg-(--compare-drawer-card-background,var(--background)) font-semibold whitespace-nowrap ring-(--compare-drawer-card-focus,var(--primary)) transition-all duration-150 hover:bg-(--compare-drawer-card-background-hover,var(--contrast-100)) focus:ring-2 focus:outline-hidden\"\n                    href={item.href}\n                  >\n                    <div className=\"relative aspect-square w-12 shrink-0 bg-(--compare-drawer-card-image-background,var(--contrast-100))\">\n                      {item.image?.src != null ? (\n                        <Image\n                          alt={item.image.alt}\n                          className=\"rounded-lg object-cover @4xl:rounded-r-none\"\n                          fill\n                          sizes=\"3rem\"\n                          src={item.image.src}\n                        />\n                      ) : (\n                        <span className=\"max-w-full p-1 text-xs break-all text-(--compare-drawer-empty-image-text,var(--primary-shadow)) opacity-20\">\n                          {getInitials(item.title)}\n                        </span>\n                      )}\n                    </div>\n                    <span className=\"hidden truncate pr-5 pl-3 text-(--compare-drawer-card-text,var(--foreground)) @4xl:block\">\n                      {item.title}\n                    </span>\n                  </Link>\n                  <button\n                    aria-label={`${removeLabel} ${item.title}`}\n                    className=\"absolute -top-2.5 -right-2.5 flex h-7 w-7 items-center justify-center rounded-full border border-(--compare-drawer-dismiss-border,var(--contrast-100)) bg-(--compare-drawer-dismiss-background,var(--background)) text-(--compare-drawer-dismiss-icon,var(--contrast-400)) transition-colors duration-150 hover:border-(--compare-drawer-dismiss-border-hover,var(--contrast-200)) hover:bg-(--compare-drawer-dismiss-background-hover,var(--contrast-100)) hover:text-(--compare-drawer-dismiss-icon-hover,var(--foreground))\"\n                    onClick={() => {\n                      startTransition(async () => {\n                        setOptimisticItems({ type: 'remove', item });\n\n                        await setParam((prev) => {\n                          const next = prev?.filter((v) => v !== item.id) ?? [];\n\n                          return next.length > 0 ? next : null;\n                        });\n                      });\n                    }}\n                    type=\"button\"\n                  >\n                    <X absoluteStrokeWidth size={16} strokeWidth={1.5} />\n                  </button>\n                </div>\n              ))}\n            </div>\n            <ButtonLink\n              className=\"hidden @md:block\"\n              href={`${href}?${paramName}=${params?.toString()}`}\n              size=\"medium\"\n              variant=\"primary\"\n            >\n              <span className=\"inline-flex items-center gap-1\">\n                {submitLabel} <ArrowRight absoluteStrokeWidth size={20} strokeWidth={1} />\n              </span>\n            </ButtonLink>\n            <ButtonLink className=\"w-full @md:hidden\" href={href} size=\"small\" variant=\"primary\">\n              <span className=\"inline-flex items-center gap-1\">\n                {submitLabel} <ArrowRight absoluteStrokeWidth size={16} strokeWidth={1} />\n              </span>\n            </ButtonLink>\n          </div>\n        </div>\n      </Portal.Root>\n    )\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/compare-drawer/index.tsx"
    },
    {
      "path": "vibes/soul/primitives/compare-drawer/loader.ts",
      "content": "import { createLoader, parseAsArrayOf, parseAsString } from 'nuqs/server';\n\nexport const compareParser = parseAsArrayOf(parseAsString).withOptions({\n  shallow: false,\n  scroll: false,\n});\n\nexport const createCompareLoader = (paramName = 'compare') =>\n  createLoader({ [paramName]: compareParser });\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/compare-drawer/loader.ts"
    }
  ]
}