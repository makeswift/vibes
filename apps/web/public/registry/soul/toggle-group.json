{
  "name": "toggle-group",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "@radix-ui/react-toggle-group"
  ],
  "registryDependencies": [
    "field-error",
    "label"
  ],
  "files": [
    {
      "path": "vibes/soul/form/toggle-group/index.tsx",
      "content": "'use client';\n\nimport * as ToggleGroupPrimitive from '@radix-ui/react-toggle-group';\nimport { clsx } from 'clsx';\nimport { ComponentPropsWithoutRef, useId } from 'react';\n\nimport { FieldError } from '@/vibes/soul/form/field-error';\nimport { Label } from '@/vibes/soul/form/label';\n\nexport type ToggleGroupProps = ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> & {\n  label?: string;\n  options: Option[];\n  errors?: string[] | null;\n  colorScheme?: 'light' | 'dark';\n  hideLabel?: boolean;\n};\n\ninterface Option {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n *  :root {\n *   --toggle-group-light-focus: var(--primary);\n *   --toggle-group-light-border: var(--contrast-100);\n *   --toggle-group-light-on-border: var(--foreground);\n *   --toggle-group-light-on-background: var(--foreground);\n *   --toggle-group-light-off-background: var(--background);\n *   --toggle-group-light-off-text: var(--foreground);\n *   --toggle-group-light-on-text: var(--background);\n *   --toggle-group-light-off-border-hover: var(--contrast-200);\n *   --toggle-group-light-off-background-hover: var(--contrast-100);\n *   --toggle-group-dark-focus: var(--primary);\n *   --toggle-group-dark-border: var(--contrast-500);\n *   --toggle-group-dark-on-border: var(--background);\n *   --toggle-group-dark-on-background: var(--background);\n *   --toggle-group-dark-off-background: var(--foreground);\n *   --toggle-group-dark-off-text: var(--background);\n *   --toggle-group-dark-on-text: var(--foreground);\n *   --toggle-group-dark-off-border-hover: var(--contrast-400);\n *   --toggle-group-dark-off-background-hover: var(--contrast-500);\n * }\n * ```\n */\nexport const ToggleGroup = ({\n  label,\n  options,\n  errors = null,\n  className = '',\n  colorScheme = 'light',\n  hideLabel = true,\n  ...rest\n}: ToggleGroupProps) => {\n  const id = useId();\n\n  return (\n    <div className={clsx('w-full', className)}>\n      {label !== undefined && label !== '' && (\n        <Label className={clsx(hideLabel ? 'sr-only' : 'mb-2')} colorScheme={colorScheme} id={id}>\n          {label}\n        </Label>\n      )}\n\n      <ToggleGroupPrimitive.Root {...rest} aria-labelledby={id} className=\"flex flex-wrap gap-2\">\n        {options.map((option) => (\n          <ToggleGroupPrimitive.Item\n            aria-label={option.label}\n            className={clsx(\n              'font-body h-12 rounded-full border px-4 text-sm leading-normal font-normal whitespace-nowrap transition-colors focus-visible:ring-2 focus-visible:outline-0 data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n              {\n                light:\n                  'border-(--toggle-group-light-border,var(--contrast-100)) ring-(--toggle-group-light-focus,var(--primary)) data-[state=off]:bg-(--toggle-group-light-off-background,var(--background)) data-[state=off]:text-(--toggle-group-light-off-text,var(--foreground)) data-[state=off]:hover:border-(--toggle-group-light-off-border-hover,var(--contrast-200)) data-[state=off]:hover:bg-(--toggle-group-light-off-background-hover,var(--contrast-100)) data-[state=on]:border-(--toggle-group-light-on-border,var(--foreground)) data-[state=on]:bg-(--toggle-group-light-on-background,var(--foreground)) data-[state=on]:text-(--toggle-group-light-on-text,var(--background))',\n                dark: 'border-(--toggle-group-dark-border,var(--contrast-500)) ring-(--toggle-group-dark-focus,var(--primary)) data-[state=off]:bg-(--toggle-group-dark-off-background,var(--foreground)) data-[state=off]:text-(--toggle-group-dark-off-text,var(--background)) data-[state=off]:hover:border-(--toggle-group-dark-off-border-hover,var(--contrast-400)) data-[state=off]:hover:bg-(--toggle-group-dark-off-background-hover,var(--contrast-500)) data-[state=on]:border-(--toggle-group-dark-on-border,var(--background)) data-[state=on]:bg-(--toggle-group-dark-on-background,var(--background)) data-[state=on]:text-(--toggle-group-dark-on-text,var(--foreground))',\n              }[colorScheme],\n            )}\n            disabled={option.disabled}\n            key={option.value}\n            value={option.value}\n          >\n            {option.label}\n          </ToggleGroupPrimitive.Item>\n        ))}\n      </ToggleGroupPrimitive.Root>\n      {errors?.map((error) => (\n        <FieldError className=\"mt-2\" key={error}>\n          {error}\n        </FieldError>\n      ))}\n    </div>\n  );\n};\n",
      "type": "registry:ui",
      "target": "vibes/soul/form/toggle-group/index.tsx"
    }
  ]
}