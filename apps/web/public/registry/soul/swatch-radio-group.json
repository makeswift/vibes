{
  "name": "swatch-radio-group",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "lucide-react",
    "@radix-ui/react-radio-group"
  ],
  "registryDependencies": [
    "field-error",
    "label"
  ],
  "files": [
    {
      "path": "vibes/soul/form/swatch-radio-group/index.tsx",
      "content": "import * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\nimport { clsx } from 'clsx';\nimport { X } from 'lucide-react';\nimport Image from 'next/image';\nimport * as React from 'react';\n\nimport { FieldError } from '@/vibes/soul/form/field-error';\nimport { Label } from '@/vibes/soul/form/label';\n\ntype SwatchOption =\n  | {\n      type: 'color';\n      value: string;\n      label: string;\n      color: string;\n      disabled?: boolean;\n    }\n  | {\n      type: 'image';\n      value: string;\n      label: string;\n      image: { src: string; alt: string };\n      disabled?: boolean;\n    };\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n *  :root {\n *    --swatch-radio-group-focus: var(--primary);\n *    --swatch-radio-group-light-icon: var(--foreground);\n *    --swatch-radio-group-light-unchecked-border: transparent;\n *    --swatch-radio-group-light-unchecked-border-hover: var(--contrast-200);\n *    --swatch-radio-group-light-disabled-border: transparent;\n *    --swatch-radio-group-light-border-error: var(--error);\n *    --swatch-radio-group-light-checked-border: var(--foreground);\n *    --swatch-radio-group-light-option-border: color-mix(in oklab, var(--foreground) 10%, transparent);\n *    --swatch-radio-group-dark-icon: var(--background);\n *    --swatch-radio-group-dark-unchecked-border: transparent;\n *    --swatch-radio-group-dark-unchecked-border-hover: var(--contrast-400);\n *    --swatch-radio-group-dark-disabled-border: transparent;\n *    --swatch-radio-group-dark-border-error: var(--error);\n *    --swatch-radio-group-dark-checked-border: var(--background);\n *    --swatch-radio-group-dark-option-border: color-mix(in oklab, var(--background) 10%, transparent);\n *  }\n * ```\n */\nexport const SwatchRadioGroup = React.forwardRef<\n  React.ComponentRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root> & {\n    label?: string;\n    options: SwatchOption[];\n    errors?: string[];\n    colorScheme?: 'light' | 'dark';\n    onOptionMouseEnter?: (value: string) => void;\n  }\n>(\n  (\n    { label, options, errors, className, colorScheme = 'light', onOptionMouseEnter, ...rest },\n    ref,\n  ) => {\n    const id = React.useId();\n\n    return (\n      <div className={clsx('space-y-2', className)}>\n        {label !== undefined && label !== '' && (\n          <Label colorScheme={colorScheme} id={id}>\n            {label}\n          </Label>\n        )}\n        <RadioGroupPrimitive.Root\n          {...rest}\n          aria-labelledby={id}\n          className=\"flex flex-wrap gap-1\"\n          ref={ref}\n        >\n          {options.map((option) => (\n            <RadioGroupPrimitive.Item\n              aria-label={option.label}\n              className={clsx(\n                'group relative box-content h-8 w-8 rounded-full border p-0.5 transition-colors focus-visible:ring-2 focus-visible:ring-(--swatch-radio-group-focus,var(--primary)) focus-visible:outline-hidden data-[disabled]:pointer-events-none [&:disabled>.disabled-icon]:grid',\n                {\n                  light:\n                    'hover:border-(--swatch-radio-group-light-unchecked-border-hover,var(--contrast-200)) data-[state=checked]:border-(--swatch-radio-group-light-checked-border,var(--foreground))',\n                  dark: 'hover:border-(--swatch-radio-group-dark-unchecked-border-hover,var(--contrast-400)) data-[state=checked]:border-(--swatch-radio-group-dark-checked-border,var(--background))',\n                }[colorScheme],\n                {\n                  light:\n                    errors && errors.length > 0\n                      ? 'border-(--swatch-radio-group-light-border-error,var(--error)) disabled:border-(--swatch-radio-group-light-disabled-border,transparent)'\n                      : 'border-(--swatch-radio-group-light-unchecked-border,transparent)',\n                  dark:\n                    errors && errors.length > 0\n                      ? 'border-(--swatch-radio-group-dark-border-error,var(--error)) disabled:border-(--swatch-radio-group-dark-disabled-border,transparent)'\n                      : 'border-(--swatch-radio-group-dark-unchecked-border,transparent)',\n                }[colorScheme],\n              )}\n              disabled={option.disabled}\n              key={option.value}\n              onMouseEnter={() => {\n                onOptionMouseEnter?.(option.value);\n              }}\n              value={option.value}\n            >\n              {option.type === 'color' ? (\n                <span\n                  className={clsx(\n                    'block size-full rounded-full border group-disabled:opacity-20',\n                    {\n                      light:\n                        'border-(--swatch-radio-group-light-option-border,color-mix(in_oklab,var(--foreground)_10%,transparent))',\n                      dark: 'border-(--swatch-radio-group-dark-option-border,color-mix(in_oklab,var(--background)_10%,transparent))',\n                    }[colorScheme],\n                  )}\n                  style={{ backgroundColor: option.color }}\n                />\n              ) : (\n                <span\n                  className={clsx(\n                    'relative block size-full overflow-hidden rounded-full border',\n                    {\n                      light:\n                        'border-(--swatch-radio-group-light-option-border,color-mix(in_oklab,var(--foreground)_10%,transparent))',\n                      dark: 'border-(--swatch-radio-group-dark-option-border,color-mix(in_oklab,var(--background)_10%,transparent))',\n                    }[colorScheme],\n                  )}\n                >\n                  <Image alt={option.image.alt} height={40} src={option.image.src} width={40} />\n                </span>\n              )}\n              <div\n                className={clsx(\n                  'disabled-icon absolute inset-0 hidden place-content-center',\n                  {\n                    light: 'text-(--swatch-radio-group-light-icon,var(--foreground))',\n                    dark: 'text-(--swatch-radio-group-dark-icon,var(--background))',\n                  }[colorScheme],\n                )}\n              >\n                <X size={16} strokeWidth={1.5} />\n              </div>\n            </RadioGroupPrimitive.Item>\n          ))}\n        </RadioGroupPrimitive.Root>\n        {errors?.map((error) => <FieldError key={error}>{error}</FieldError>)}\n      </div>\n    );\n  },\n);\n\nSwatchRadioGroup.displayName = 'SwatchRadioGroup';\n",
      "type": "registry:ui",
      "target": "vibes/soul/form/swatch-radio-group/index.tsx"
    }
  ]
}