{
  "name": "blog-post-carousel",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "lucide-react"
  ],
  "registryDependencies": [
    "carousel",
    "skeleton",
    "blog-post-card",
    "streamable"
  ],
  "files": [
    {
      "path": "vibes/soul/sections/blog-post-carousel/index.tsx",
      "content": "import { clsx } from 'clsx';\nimport { ArrowLeft, ArrowRight } from 'lucide-react';\n\nimport { Stream, Streamable } from '@/vibes/soul/lib/streamable';\nimport {\n  type BlogPost,\n  BlogPostCard,\n  BlogPostCardSkeleton,\n} from '@/vibes/soul/primitives/blog-post-card';\nimport {\n  Carousel,\n  CarouselButtons,\n  CarouselContent,\n  CarouselItem,\n  CarouselScrollbar,\n} from '@/vibes/soul/primitives/carousel';\nimport * as Skeleton from '@/vibes/soul/primitives/skeleton';\n\nexport interface BlogPostCarouselProps {\n  className?: string;\n  blogPosts: Streamable<BlogPost[]>;\n  scrollbarLabel?: string;\n  previousLabel?: string;\n  nextLabel?: string;\n  placeholderCount?: number;\n  emptyStateTitle?: Streamable<string>;\n  emptyStateSubtitle?: Streamable<string>;\n  hideOverflow?: boolean;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --blog-post-carousel-empty-title: var(--foreground);\n *   --blog-post-carousel-empty-subtitle: var(--contrast-500);\n * }\n * ```\n */\nexport function BlogPostCarousel({\n  className,\n  blogPosts: streamableBlogPosts,\n  scrollbarLabel,\n  previousLabel,\n  nextLabel,\n  hideOverflow = true,\n  emptyStateTitle,\n  emptyStateSubtitle,\n}: BlogPostCarouselProps) {\n  return (\n    <Stream\n      fallback={<BlogPostCarouselSkeleton className={className} />}\n      value={streamableBlogPosts}\n    >\n      {(blogPosts) => {\n        if (blogPosts.length === 0) {\n          return (\n            <BlogPostCarouselEmptyState\n              className={className}\n              emptyStateSubtitle={emptyStateSubtitle}\n              emptyStateTitle={emptyStateTitle}\n            />\n          );\n        }\n\n        return (\n          <Carousel className={clsx(className)} hideOverflow={hideOverflow}>\n            <CarouselContent className=\"mb-10\">\n              {blogPosts.map(({ ...post }) => {\n                return (\n                  <CarouselItem\n                    className=\"basis-full @md:basis-1/2 @4xl:basis-1/3 @7xl:basis-1/4\"\n                    key={post.href}\n                  >\n                    <BlogPostCard {...post} />\n                  </CarouselItem>\n                );\n              })}\n            </CarouselContent>\n            <div className=\"flex w-full items-center justify-between\">\n              <CarouselScrollbar label={scrollbarLabel} />\n              <CarouselButtons nextLabel={nextLabel} previousLabel={previousLabel} />\n            </div>\n          </Carousel>\n        );\n      }}\n    </Stream>\n  );\n}\n\nexport function BlogPostCarouselSkeleton({\n  className,\n  placeholderCount = 3,\n  hideOverflow = true,\n}: Pick<BlogPostCarouselProps, 'className' | 'placeholderCount' | 'hideOverflow'>) {\n  return (\n    <Skeleton.Root\n      className={clsx('group-has-[[data-pending]]/blog-post-carousel:animate-pulse', className)}\n      hideOverflow={hideOverflow}\n      pending\n    >\n      <div className=\"w-full\">\n        <div className=\"-ml-4 flex @2xl:-ml-5\">\n          {Array.from({ length: placeholderCount }).map((_, index) => (\n            <div\n              className=\"min-w-0 shrink-0 grow-0 basis-full pl-4 @md:basis-1/2 @2xl:pl-5 @4xl:basis-1/3 @7xl:basis-1/4\"\n              key={index}\n            >\n              <BlogPostCardSkeleton />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"mt-10 flex w-full items-center justify-between gap-8\">\n        <Skeleton.Box className=\"h-1 w-full max-w-56 rounded\" />\n        <div className=\"flex gap-2\">\n          <Skeleton.Icon icon={<ArrowLeft aria-hidden className=\"h-6 w-6\" strokeWidth={1.5} />} />\n          <Skeleton.Icon icon={<ArrowRight aria-hidden className=\"h-6 w-6\" strokeWidth={1.5} />} />\n        </div>\n      </div>\n    </Skeleton.Root>\n  );\n}\n\nexport function BlogPostCarouselEmptyState({\n  className,\n  placeholderCount = 4,\n  emptyStateTitle,\n  emptyStateSubtitle,\n  hideOverflow = true,\n}: Pick<\n  BlogPostCarouselProps,\n  'className' | 'emptyStateTitle' | 'emptyStateSubtitle' | 'placeholderCount' | 'hideOverflow'\n>) {\n  return (\n    <Skeleton.Root className={clsx('relative', className)} hideOverflow={hideOverflow}>\n      <div className=\"w-full\">\n        <div className=\"-ml-4 flex [mask-image:linear-gradient(to_bottom,_black_0%,_transparent_90%)] @2xl:-ml-5\">\n          {Array.from({ length: placeholderCount }).map((_, index) => (\n            <div\n              className=\"min-w-0 shrink-0 grow-0 basis-full pl-4 @md:basis-1/2 @2xl:pl-5 @4xl:basis-1/3 @7xl:basis-1/4\"\n              key={index}\n            >\n              <BlogPostCardSkeleton />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"absolute inset-0 mx-auto px-3 py-16 pb-3 @4xl:px-10 @4xl:pt-28 @4xl:pb-10\">\n        <div className=\"mx-auto max-w-xl space-y-2 text-center @4xl:space-y-3\">\n          <h3 className=\"font-heading text-2xl leading-tight text-(--blog-post-carousel-empty-title,var(--foreground)) @4xl:text-4xl\">\n            {emptyStateTitle}\n          </h3>\n          <p className=\"text-sm text-(--blog-post-carousel-empty-subtitle,var(--contrast-500)) @4xl:text-lg\">\n            {emptyStateSubtitle}\n          </p>\n        </div>\n      </div>\n    </Skeleton.Root>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/sections/blog-post-carousel/index.tsx"
    }
  ]
}