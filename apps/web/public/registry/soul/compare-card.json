{
  "name": "compare-card",
  "type": "registry:ui",
  "dependencies": [
    "clsx"
  ],
  "registryDependencies": [
    "skeleton",
    "product-card",
    "rating",
    "button-link",
    "reveal"
  ],
  "files": [
    {
      "path": "vibes/soul/primitives/compare-card/index.tsx",
      "content": "import { clsx } from 'clsx';\nimport { Fragment } from 'react';\n\nimport { ButtonLink } from '@/vibes/soul/primitives/button-link';\nimport {\n  type Product,\n  ProductCard,\n  ProductCardSkeleton,\n} from '@/vibes/soul/primitives/product-card';\nimport { Rating } from '@/vibes/soul/primitives/rating';\nimport { Reveal } from '@/vibes/soul/primitives/reveal';\nimport * as Skeleton from '@/vibes/soul/primitives/skeleton';\n\nimport { AddToCartForm, CompareAddToCartAction } from './add-to-cart-form';\n\nexport interface CompareProduct extends Product {\n  description?: string | React.ReactNode;\n  customFields?: Array<{ name: string; value: string }>;\n  hasVariants?: boolean;\n  disabled?: boolean;\n  isPreorder?: boolean;\n}\n\nexport interface CompareCardProps {\n  className?: string;\n  product: CompareProduct;\n  addToCartLabel?: string;\n  descriptionLabel?: string;\n  noDescriptionLabel?: string;\n  ratingLabel?: string;\n  noRatingsLabel?: string;\n  otherDetailsLabel?: string;\n  noOtherDetailsLabel?: string;\n  viewOptionsLabel?: string;\n  preorderLabel?: string;\n  addToCartAction?: CompareAddToCartAction;\n  imageSizes?: string;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --compare-card-divider: var(--contrast-100);\n *   --compare-card-label: var(--foreground);\n *   --compare-card-description: var(--contrast-400);\n *   --compare-card-field: var(--foreground);\n *   --compare-card-font-family-primary: var(--font-family-body);\n *   --compare-card-font-family-secondary: var(--font-family-mono);\n * }\n * ```\n */\nexport function CompareCard({\n  className,\n  product,\n  addToCartAction,\n  addToCartLabel = 'Add to cart',\n  descriptionLabel = 'Description',\n  noDescriptionLabel = 'There is no description available.',\n  ratingLabel = 'Rating',\n  noRatingsLabel = 'There are no reviews.',\n  otherDetailsLabel = 'Other details',\n  noOtherDetailsLabel = 'There are no other details.',\n  viewOptionsLabel = 'View options',\n  preorderLabel = 'Preorder',\n  imageSizes,\n}: CompareCardProps) {\n  return (\n    <div\n      className={clsx(\n        '@container w-full max-w-72 divide-y divide-(--compare-card-divider,var(--contrast-100)) font-(family-name:--compare-card-font-family-primary,var(--font-family-body)) font-normal',\n        className,\n      )}\n    >\n      <div className=\"mb-2 space-y-4 pb-4\">\n        <ProductCard imageSizes={imageSizes} product={product} />\n        {addToCartAction &&\n          (product.hasVariants !== undefined && !product.hasVariants ? (\n            <AddToCartForm\n              addToCartAction={addToCartAction}\n              addToCartLabel={addToCartLabel}\n              disabled={product.disabled}\n              isPreorder={product.isPreorder}\n              preorderLabel={preorderLabel}\n              productId={product.id}\n            />\n          ) : (\n            <ButtonLink className=\"w-full\" href={product.href} size=\"medium\">\n              {viewOptionsLabel}\n            </ButtonLink>\n          ))}\n      </div>\n      <div className=\"space-y-4 py-4\">\n        <div className=\"font-(family-name:--compare-card-font-family-secondary,var(--font-family-mono)) text-xs font-normal text-(--compare-card-label,var(--foreground)) uppercase\">\n          {ratingLabel}\n        </div>\n        {product.rating != null ? (\n          <Rating rating={product.rating} />\n        ) : (\n          <p className=\"text-sm text-(--compare-card-description,var(--contrast-400))\">\n            {noRatingsLabel}\n          </p>\n        )}\n      </div>\n      <div className=\"space-y-4 py-4\">\n        <div className=\"font-(family-name:--compare-card-font-family-secondary,var(--font-family-mono)) text-xs font-normal text-(--compare-card-label,var(--foreground)) uppercase\">\n          {descriptionLabel}\n        </div>\n        {product.description != null && product.description !== '' ? (\n          <Reveal>\n            <div className=\"prose prose-sm [&>div>*:first-child]:mt-0 [&>div>*:last-child]:mb-0\">\n              {product.description}\n            </div>\n          </Reveal>\n        ) : (\n          <p className=\"text-sm text-(--compare-card-description,var(--contrast-400))\">\n            {noDescriptionLabel}\n          </p>\n        )}\n      </div>\n      {product.customFields != null ? (\n        <div className=\"space-y-4 py-4\">\n          <div className=\"font-(family-name:--compare-card-font-family-secondary,var(--font-family-mono)) text-xs font-normal text-(--compare-card-label,var(--foreground)) uppercase\">\n            {otherDetailsLabel}\n          </div>\n          <Reveal>\n            <dl className=\"grid grid-cols-2 gap-1 text-xs font-normal text-(--compare-card-field,var(--foreground))\">\n              {product.customFields.map((field, index) => (\n                <Fragment key={index}>\n                  <dt className=\"font-semibold\">{field.name}: </dt>\n                  <dd>{field.value}</dd>\n                </Fragment>\n              ))}\n            </dl>\n          </Reveal>\n        </div>\n      ) : (\n        <div className=\"space-y-4 py-4\">\n          <div className=\"font-(family-name:--compare-card-font-family-secondary,var(--font-family-mono)) text-xs font-normal text-(--compare-card-label,var(--foreground)) uppercase\">\n            {otherDetailsLabel}\n          </div>\n          <p className=\"text-sm text-(--compare-card-description,var(--contrast-400))\">\n            {noOtherDetailsLabel}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function CompareCardSkeleton({ className }: { className?: string }) {\n  return (\n    <div\n      className={clsx(\n        '@container w-full max-w-md divide-y divide-(--compare-card-divider,var(--contrast-100))',\n        className,\n      )}\n    >\n      <div className=\"mb-2 space-y-4 pb-4\">\n        <ProductCardSkeleton />\n        <Skeleton.Box className=\"h-12 rounded-full\" />\n      </div>\n      <div className=\"space-y-4 py-4 text-xs\">\n        <Skeleton.Text characterCount={10} className=\"rounded\" />\n        <Skeleton.Box className=\"h-6 w-32 rounded\" />\n      </div>\n      <div className=\"space-y-4 py-4 text-xs\">\n        <Skeleton.Text characterCount={12} className=\"rounded\" />\n        <div className=\"text-sm\">\n          <Skeleton.Text characterCount=\"full\" className=\"rounded\" />\n          <Skeleton.Text characterCount={45} className=\"rounded\" />\n          <Skeleton.Text characterCount={40} className=\"rounded\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/compare-card/index.tsx"
    },
    {
      "path": "vibes/soul/primitives/compare-card/add-to-cart-form.tsx",
      "content": "'use client';\n\nimport { SubmissionResult, useForm } from '@conform-to/react';\nimport { ReactNode, useActionState, useEffect } from 'react';\n\nimport { Button } from '@/vibes/soul/primitives/button';\nimport { toast } from '@/vibes/soul/primitives/toaster';\n\ntype Action<S, P> = (state: Awaited<S>, payload: P) => S | Promise<S>;\n\ninterface State {\n  lastResult: SubmissionResult | null;\n  successMessage?: ReactNode;\n}\n\nexport type CompareAddToCartAction = Action<State, FormData>;\n\ninterface Props {\n  disabled?: boolean;\n  productId: string;\n  addToCartLabel: string;\n  preorderLabel: string;\n  isPreorder?: boolean;\n  addToCartAction: CompareAddToCartAction;\n}\n\nexport function AddToCartForm({\n  productId,\n  addToCartLabel,\n  addToCartAction,\n  isPreorder = false,\n  preorderLabel,\n  disabled = false,\n}: Props) {\n  const [{ lastResult, successMessage }, formAction, pending] = useActionState(addToCartAction, {\n    lastResult: null,\n    successMessage: undefined,\n  });\n\n  const [form] = useForm({ lastResult });\n\n  useEffect(() => {\n    if (lastResult?.status === 'success') {\n      toast.success(successMessage);\n    }\n  }, [lastResult, successMessage]);\n\n  useEffect(() => {\n    if (form.errors) {\n      form.errors.forEach((error) => {\n        toast.error(error);\n      });\n    }\n  }, [form.errors]);\n\n  return (\n    <form action={formAction}>\n      <input name=\"id\" type=\"hidden\" value={productId} />\n      <Button className=\"w-full\" disabled={disabled} loading={pending} size=\"medium\" type=\"submit\">\n        {isPreorder ? preorderLabel : addToCartLabel}\n      </Button>\n    </form>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/compare-card/add-to-cart-form.tsx"
    },
    {
      "path": "vibes/soul/primitives/compare-card/schema.ts",
      "content": "import { z } from 'zod';\n\nexport const compareAddToCartFormDataSchema = z.object({\n  id: z.string(),\n});\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/compare-card/schema.ts"
    }
  ]
}