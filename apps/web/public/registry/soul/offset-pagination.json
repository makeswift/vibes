{
  "name": "offset-pagination",
  "type": "registry:ui",
  "dependencies": [
    "clsx"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "vibes/soul/primitives/offset-pagination/index.tsx",
      "content": "'use client';\n\nimport { clsx } from 'clsx';\nimport Link from 'next/link';\nimport { usePathname, useSearchParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\n\nexport interface OffsetPaginationProps {\n  pages: number;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --offset-pagination-focus: var(--primary);\n *   -offset-pagination-font-family: var(--font-family-body);\n *   --offset-pagination-ellipsis: var(--foreground)\n *   --offset-pagination-border: var(--contrast-100);\n *   --offset-pagination-text: var(--foreground);\n *   --offset-pagination-background-hover: var(--contrast-100);\n *   --offset-pagination-current-page-border: var(--foreground);\n *   --offset-pagination-current-page-background: var(--foreground);\n *   --offset-pagination-current-page-text: var(--background);\n *   --offset-pagination-current-pagebackground-hover: var(--contrast-500);\n * }\n * ```\n */\nexport function OffsetPagination({ pages: totalPages }: OffsetPaginationProps) {\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  const initialPage = parseInt(searchParams.get('page') ?? '1', 10);\n\n  const [currentPage, setCurrentPage] = useState(initialPage);\n\n  useEffect(() => {\n    const current = parseInt(searchParams.get('page') ?? '1', 10);\n    if (current !== currentPage) {\n      setCurrentPage(current);\n    }\n  }, [currentPage, searchParams]);\n\n  const renderPagination = () => {\n    const pages = [];\n\n    if (totalPages <= 4) {\n      pages.push(...Array.from({ length: totalPages }, (_, i) => i + 1));\n    } else {\n      pages.push(1);\n\n      if (currentPage > 3) {\n        pages.push('...');\n      }\n\n      if (currentPage > 2 && currentPage < totalPages - 1) {\n        pages.push(currentPage - 1);\n        pages.push(currentPage);\n        pages.push(currentPage + 1);\n      } else if (currentPage <= 2) {\n        pages.push(2);\n        pages.push(3);\n      } else {\n        pages.push(totalPages - 2);\n        pages.push(totalPages - 1);\n      }\n\n      if (currentPage < totalPages - 2) {\n        pages.push('...');\n      }\n\n      if (totalPages > 1) {\n        pages.push(totalPages);\n      }\n    }\n\n    return pages;\n  };\n\n  return (\n    <div className=\"flex w-full justify-center py-10 font-(family-name:--offset-pagination-font-family,var(--font-family-body)) text-xs\">\n      <div className=\"flex gap-2\">\n        {renderPagination().map((page, index) =>\n          typeof page === 'string' ? (\n            <span\n              className=\"hidden h-12 w-12 items-center justify-center text-(--offset-pagination-ellipsis,var(--foreground)) @lg:flex\"\n              key={index}\n            >\n              ...\n            </span>\n          ) : (\n            <Link\n              className={clsx(\n                'flex h-12 w-12 items-center justify-center rounded-full border transition-colors duration-300 focus:outline-hidden focus-visible:ring-2 focus-visible:ring-(--offset-pagination-focus,var(--primary))',\n                page === currentPage\n                  ? 'border-(--offset-pagination-current-page-border,var(--foreground)) bg-(--offset-pagination-current-page-background,var(--foreground)) text-(--offset-pagination-current-page-text,var(--background)) hover:bg-(--offset-pagination-current-pagebackground-hover,var(--contrast-500))'\n                  : 'border-(--offset-pagination-border,var(--contrast-100)) text-(--offset-pagination-text,var(--foreground)) hover:bg-(--offset-pagination-background-hover,var(--contrast-100))',\n              )}\n              href={`${pathname}?page=${page.toString()}`}\n              key={index}\n              onClick={() => setCurrentPage(page)}\n            >\n              {page}\n            </Link>\n          ),\n        )}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/offset-pagination/index.tsx"
    }
  ]
}