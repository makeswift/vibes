{
  "name": "breadcrumbs",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "lucide-react"
  ],
  "registryDependencies": [
    "streamable",
    "skeleton",
    "animated-underline"
  ],
  "files": [
    {
      "path": "vibes/soul/sections/breadcrumbs/index.tsx",
      "content": "import { clsx } from 'clsx';\nimport { ChevronRight } from 'lucide-react';\nimport Link from 'next/link';\n\nimport { Stream, Streamable } from '@/vibes/soul/lib/streamable';\nimport { AnimatedUnderline } from '@/vibes/soul/primitives/animated-underline';\nimport * as Skeleton from '@/vibes/soul/primitives/skeleton';\n\nexport interface Breadcrumb {\n  label: string;\n  href: string;\n}\n\nexport interface BreadcrumbsProps {\n  breadcrumbs: Streamable<Breadcrumb[]>;\n  className?: string;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --breadcrumbs-font-family: var(--font-family-body);\n *   --breadcrumbs-primary-text: var(--foreground);\n *   --breadcrumbs-secondary-text: var(--contrast-500);\n *   --breadcrumbs-icon: var(--contrast-500);\n *   --breadcrumbs-hover: var(--primary);\n * }\n * ```\n */\nexport function Breadcrumbs({ breadcrumbs: streamableBreadcrumbs, className }: BreadcrumbsProps) {\n  return (\n    <Stream fallback={<BreadcrumbsSkeleton className={className} />} value={streamableBreadcrumbs}>\n      {(breadcrumbs) => {\n        if (breadcrumbs.length === 0) {\n          return <BreadCrumbEmptyState className={className} />;\n        }\n\n        return (\n          <nav aria-label=\"breadcrumb\" className={clsx(className)}>\n            <ol className=\"flex flex-wrap items-center gap-x-1.5 text-sm @xl:text-base\">\n              {breadcrumbs.map(({ label, href }, index) => {\n                if (index < breadcrumbs.length - 1) {\n                  return (\n                    <li className=\"inline-flex items-center gap-x-1.5\" key={href}>\n                      <Link className=\"group/underline focus:outline-hidden\" href={href}>\n                        <AnimatedUnderline className=\"font-[family-name:var(--breadcrumbs-font-family,var(--font-family-body))] text-(--breadcrumbs-primary-text,var(--foreground)) [background:linear-gradient(0deg,var(--breadcrumbs-hover,var(--primary)),var(--breadcrumbs-hover,var(--primary)))_no-repeat_left_bottom_/_0_2px]\">\n                          {label}\n                        </AnimatedUnderline>\n                      </Link>\n                      <ChevronRight\n                        aria-hidden=\"true\"\n                        className=\"text-(--breadcrumbs-icon,var(--contrast-500))\"\n                        size={20}\n                        strokeWidth={1}\n                      />\n                    </li>\n                  );\n                }\n\n                return (\n                  <li\n                    className=\"inline-flex items-center font-[family-name:var(--breadcrumbs-font-family,var(--font-family-body))] text-(--breadcrumbs-secondary-text,var(--contrast-500))\"\n                    key={href}\n                  >\n                    <span aria-current=\"page\" aria-disabled=\"true\" role=\"link\">\n                      {label}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n          </nav>\n        );\n      }}\n    </Stream>\n  );\n}\n\nexport function BreadcrumbsSkeleton({ className }: Pick<BreadcrumbsProps, 'className'>) {\n  return (\n    <Skeleton.Root\n      className={clsx('group-has-[[data-pending]]/breadcrumbs:animate-pulse', className)}\n      pending\n    >\n      <div className=\"flex flex-wrap items-center gap-x-1.5 text-sm @xl:text-base\">\n        <Skeleton.Text characterCount={4} className=\"rounded-sm text-lg\" />\n        <Skeleton.Icon icon={<ChevronRight aria-hidden className=\"h-5 w-5\" strokeWidth={1} />} />\n        <Skeleton.Text characterCount={6} className=\"rounded-sm text-lg\" />\n        <Skeleton.Icon icon={<ChevronRight aria-hidden className=\"h-5 w-5\" strokeWidth={1} />} />\n        <Skeleton.Text characterCount={6} className=\"rounded-sm text-lg\" />\n      </div>\n    </Skeleton.Root>\n  );\n}\n\nexport function BreadCrumbEmptyState({ className }: Pick<BreadcrumbsProps, 'className'>) {\n  return (\n    <Skeleton.Root className={className}>\n      <div className={clsx('min-h-[1lh]', className)} />\n    </Skeleton.Root>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/sections/breadcrumbs/index.tsx"
    }
  ]
}