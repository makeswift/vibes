{
  "name": "discount",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "vibes/soul/sections/discount/index.tsx",
      "content": "'use client';\n\nimport { clsx } from 'clsx';\nimport { X } from 'lucide-react';\nimport Image from 'next/image';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { Button } from '@/vibes/soul/primitives/button';\n\ninterface DiscountType {\n  label: string;\n  code: string;\n}\n\nexport interface DiscountProps {\n  id: string;\n  backgroundImage: string;\n  discounts: DiscountType[];\n  onDismiss?: () => void;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --discount-focus: var(--primary);\n *   --discount-font-family: var(--font-family-body);\n *   --discount-background: var(--primary-shadow);\n *   --discount-image-background: var(--contrast-100);\n *   --discount-text: var(--background);\n *   --discount-spinner-background: var(--background);\n *   --discount-spinner-text: var(--foreground);\n *   --discount-close-background: transparent;\n *   --discount-close-icon: var(--foreground);\n *   --discount-close-background-hover: color-mix(in oklab, var(--background) 40%, transparent);\n * }\n * ```\n */\nexport function Discount({ id, backgroundImage, discounts, onDismiss }: DiscountProps) {\n  const [dismissed, setDismissed] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const [spin, setSpin] = useState(false);\n  const [isSpun, setIsSpun] = useState(false);\n  const [shuffledCodes, setShuffledCodes] = useState<DiscountType[]>([]);\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    const hidden = localStorage.getItem(`${id}-hidden-discount`) === 'true';\n    setInitialized(true);\n    setDismissed(hidden);\n  }, [id]);\n\n  useEffect(() => {\n    if (spin) {\n      setTimeout(() => {\n        setIsSpun(true);\n      }, 5000);\n    }\n  }, [spin]);\n\n  useEffect(() => {\n    const shuffled = shuffleCodes(\n      Array<DiscountType>(10)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        .fill(discounts[0]!)\n        .flatMap(() => discounts),\n    );\n    setShuffledCodes(shuffled);\n  }, [discounts]);\n\n  const hideDiscount = useCallback(() => {\n    setDismissed(true);\n    localStorage.setItem(`${id}-hidden-discount`, 'true');\n    onDismiss?.();\n  }, [id, onDismiss]);\n\n  const shuffleCodes = (array: DiscountType[]) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const copy = async () => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      await navigator.clipboard.writeText(shuffledCodes[shuffledCodes.length - 2]!.code);\n      setCopied(true);\n      setTimeout(() => {\n        setCopied(false);\n      }, 2000);\n    } catch (error) {\n      console.log('Failed to copy:', error);\n    }\n  };\n\n  if (!initialized) return null;\n\n  return (\n    <section\n      className={clsx(\n        '@container relative top-0 left-0 flex h-dvh w-full items-center justify-center bg-(--discount-image-background,var(--contrast-100)) font-(family-name:--discount-font-family,var(--font-family-body)) text-(--discount-text,var(--background)) transition-[opacity,translate] duration-300',\n        dismissed ? 'translate-y-full opacity-0' : 'translate-y-0 opacity-100',\n      )}\n    >\n      <Image\n        alt=\"Background image\"\n        className=\"object-cover\"\n        fill\n        sizes=\"100vw\"\n        src={backgroundImage}\n      />\n\n      <button\n        aria-label=\"Dismiss discount\"\n        className=\"absolute top-5 right-5 flex h-8 w-8 items-center justify-center rounded-full bg-(--discount-close-background,transparent) text-(--discount-close-icon,var(--foreground)) transition-colors duration-300 hover:bg-(--discount-close-background-hover,color-mix(in_oklab,var(--background)_40%,transparent)) focus-visible:ring-2 focus-visible:ring-(--discount-focus,var(--foreground)) focus-visible:outline-hidden\"\n        onClick={(e) => {\n          e.preventDefault();\n          hideDiscount();\n        }}\n      >\n        <X absoluteStrokeWidth size={20} strokeWidth={1.5} />\n      </button>\n\n      {/* Desktop Version */}\n      <button\n        className=\"z-10 m-5 hidden h-24 w-full max-w-4xl cursor-pointer items-center justify-between gap-10 overflow-hidden rounded-3xl bg-(--discount-background,var(--primary-shadow)) transition-transform focus-visible:ring-2 focus-visible:ring-(--button-focus,var(--primary)) focus-visible:ring-offset-2 focus-visible:outline-hidden active:scale-[0.99] @4xl:flex\"\n        onClick={() => {\n          if (isSpun) {\n            void copy();\n          } else {\n            setSpin(true);\n          }\n        }}\n      >\n        <DiscountUI\n          copied={copied}\n          copy={copy}\n          discounts={discounts}\n          isSpun={isSpun}\n          setSpin={setSpin}\n          shuffledCodes={shuffledCodes}\n          spin={spin}\n        />\n      </button>\n\n      {/* Mobile Version */}\n      <div className=\"z-10 m-5 flex w-full max-w-xs cursor-pointer flex-col items-center justify-between overflow-hidden rounded-3xl transition-transform @4xl:hidden\">\n        <DiscountUI\n          copied={copied}\n          copy={copy}\n          discounts={discounts}\n          isSpun={isSpun}\n          renderButton\n          setSpin={setSpin}\n          shuffledCodes={shuffledCodes}\n          spin={spin}\n        />\n      </div>\n    </section>\n  );\n}\n\ninterface DiscountUIProps {\n  isSpun: boolean;\n  copied: boolean;\n  spin: boolean;\n  setSpin: (value: boolean) => void;\n  discounts: DiscountType[];\n  shuffledCodes: DiscountType[];\n  copy: () => Promise<void>;\n  renderButton?: boolean;\n}\n\nconst DiscountUI = ({\n  isSpun,\n  copied,\n  spin,\n  setSpin,\n  discounts,\n  shuffledCodes,\n  copy,\n  renderButton,\n}: DiscountUIProps) => {\n  let discountText = 'Spin for discount';\n\n  if (isSpun) {\n    discountText = copied ? 'Copied!' : `Copy discount code`;\n  }\n\n  return (\n    <>\n      <h2 className=\"flex min-h-20 w-full items-center justify-center bg-(--discount-background,var(--primary-shadow)) py-3 text-center text-2xl leading-none font-medium select-none @4xl:mb-0 @4xl:justify-start @4xl:bg-transparent @4xl:px-6 @4xl:text-4xl\">\n        {discountText}\n      </h2>\n      <div className=\"flex w-full max-w-xs flex-col gap-4 rounded-b-3xl bg-(--discount-spinner-background,var(--background)) px-6 pt-4 pb-6 @4xl:rounded-t-3xl @4xl:p-0\">\n        <div className=\"relative h-[100px] w-full overflow-hidden bg-(--discount-spinner-background,var(--background)) text-(--discount-spinner-text,var(--foreground)) before:absolute before:top-0 before:left-0 before:z-10 before:h-8 before:w-full before:bg-gradient-to-b before:from-(--discount-spinner-background,var(--background)) before:to-transparent after:absolute after:bottom-0 after:left-0 after:z-10 after:h-8 after:w-full after:bg-gradient-to-t after:from-(--discount-spinner-background,var(--background)) after:to-transparent @4xl:max-w-72\">\n          <div\n            className=\"absolute -top-8 left-0 w-full transition-all [transition-duration:5000ms] [transition-timing-function:cubic-bezier(0.285,-0.125,0.050,1.130)]\"\n            style={{\n              transform: spin\n                ? `translateY(calc(-100% + ${discounts.length * 33}px))`\n                : 'translateY(0)',\n            }}\n          >\n            {shuffledCodes.map((discount, index) => (\n              <div\n                className=\"flex items-center justify-center py-1 text-5xl leading-[1] font-medium tracking-[-1px] text-(--discount-spinner-text,var(--foreground)) uppercase transition-transform duration-500 select-none @4xl:justify-end @4xl:px-6\"\n                key={index}\n              >\n                {discount.label}\n              </div>\n            ))}\n          </div>\n        </div>\n        {renderButton === true && (\n          <Button\n            className=\"w-full justify-center select-none\"\n            onClick={() => {\n              if (isSpun) {\n                void copy();\n              } else {\n                setSpin(true);\n              }\n            }}\n            variant=\"secondary\"\n          >\n            {isSpun ? 'Copy' : 'Spin'}\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n",
      "type": "registry:ui",
      "target": "vibes/soul/sections/discount/index.tsx"
    }
  ]
}