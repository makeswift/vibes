{
  "name": "button-link",
  "type": "registry:ui",
  "dependencies": [
    "clsx"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "vibes/soul/primitives/button-link/index.tsx",
      "content": "import { clsx } from 'clsx';\nimport Link from 'next/link';\nimport { ComponentPropsWithoutRef } from 'react';\n\nexport interface ButtonLinkProps extends ComponentPropsWithoutRef<typeof Link> {\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'ghost';\n  size?: 'large' | 'medium' | 'small' | 'x-small';\n  shape?: 'pill' | 'rounded' | 'square' | 'circle';\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --button-focus: var(--primary);\n *   --button-font-family: var(--font-family-body);\n *   --button-primary-background: var(--primary);\n *   --button-primary-background-hover: var(--primary-highlight);\n *   --button-primary-text: var(--foreground);\n *   --button-primary-border: var(--primary);\n *   --button-secondary-background: var(--foreground);\n *   --button-secondary-background-hover: var(--background);\n *   --button-secondary-text: var(--background);\n *   --button-secondary-border: var(--foreground);\n *   --button-tertiary-background: var(--background);\n *   --button-tertiary-background-hover: var(--contrast-100);\n *   --button-tertiary-text: var(--foreground);\n *   --button-tertiary-border: var(--contrast-200);\n *   --button-ghost-background: transparent;\n *   --button-ghost-background-hover: color-mix(in oklab, var(--foreground) 5%, transparent);\n *   --button-ghost-text: var(--foreground);\n *   --button-ghost-border: transparent;\n * }\n * ```\n */\nexport function ButtonLink({\n  variant = 'primary',\n  size = 'large',\n  shape = 'pill',\n  className,\n  children,\n  ...props\n}: ButtonLinkProps) {\n  return (\n    <Link\n      {...props}\n      className={clsx(\n        'relative z-0 inline-flex h-fit items-center justify-center overflow-hidden border text-center font-(family-name:--button-font-family) leading-normal font-semibold select-none after:absolute after:inset-0 after:-z-10 after:-translate-x-[105%] after:transition after:duration-300 after:[animation-timing-function:cubic-bezier(0,0.25,0,1)] hover:after:translate-x-0 focus-visible:ring-2 focus-visible:ring-(--button-focus,var(--primary)) focus-visible:ring-offset-2 focus-visible:outline-hidden',\n        {\n          primary:\n            'border-(--button-primary-border,var(--primary)) bg-(--button-primary-background,var(--primary)) text-(--button-primary-text,var(--foreground)) after:bg-(--button-primary-background-hover,var(--primary-highlight))',\n          secondary:\n            'border-(--button-secondary-border,var(--foreground)) bg-(--button-secondary-background,var(--foreground)) text-(--button-secondary-text,var(--background)) after:bg-(--button-secondary-background-hover,var(--background))',\n          tertiary:\n            'border-(--button-tertiary-border,var(--contrast-200)) bg-(--button-tertiary-background,var(--background)) text-(--button-tertiary-text,var(--foreground)) after:bg-(--button-tertiary-background-hover,var(--contrast-100))',\n          ghost:\n            'border-(--button-ghost-border,transparent) bg-(--button-ghost-background,transparent) text-(--button-ghost-text,var(--foreground)) after:bg-(--button-ghost-background-hover,color-mix(in_oklab,var(--foreground)_5%,transparent))',\n        }[variant],\n        {\n          'x-small': 'min-h-8 text-xs',\n          small: 'min-h-10 text-sm',\n          medium: 'min-h-12 text-base',\n          large: 'min-h-14 text-base',\n        }[size],\n        shape !== 'circle' &&\n          {\n            'x-small': 'gap-x-2 px-3 py-1.5',\n            small: 'gap-x-2 px-4 py-2.5',\n            medium: 'gap-x-2.5 px-5 py-3',\n            large: 'gap-x-3 px-6 py-4',\n          }[size],\n        {\n          pill: 'rounded-full after:rounded-full',\n          rounded: 'rounded-lg after:rounded-lg',\n          square: 'rounded-none after:rounded-none',\n          circle: 'aspect-square rounded-full after:rounded-full',\n        }[shape],\n        className,\n      )}\n    >\n      <span className={clsx(variant === 'secondary' && 'mix-blend-difference')}>{children}</span>\n    </Link>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/button-link/index.tsx"
    }
  ]
}