{
  "name": "tabs",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-tabs",
    "clsx"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "vibes/soul/primitives/tabs/index.tsx",
      "content": "'use client';\n\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\nimport { clsx } from 'clsx';\nimport { ComponentPropsWithoutRef, ComponentPropsWithRef, ReactNode } from 'react';\n\ninterface Tab {\n  value: string;\n  label: string;\n  content: ReactNode;\n}\n\nexport type TabsProps = ComponentPropsWithoutRef<typeof TabsPrimitive.Root> & {\n  className?: string;\n  defaultValue: string;\n  tabs: Tab[];\n};\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --tabs-focus: var(--primary);\n *   --tabs-font-family: var(--font-family-body);\n *   --tabs-text: var(--contrast-500);\n *   --tabs-text-hover: var(--foreground);\n *   --tabs-text-active: var(--foreground);\n *   --tabs-underline-default: var(--contrast-200);\n *   --tabs-underline-active: var(--primary);\n *   --tabs-underline-hover: var(--contrast-200);\n *   --tabs-border: var(--contrast-100);\n * }\n * ```\n */\nexport function Tabs({ className, defaultValue, tabs, ...props }: TabsProps) {\n  return (\n    <TabsPrimitive.Root className={clsx(className)} defaultValue={defaultValue} {...props}>\n      <TabsList>\n        {tabs.map(({ value, label }) => (\n          <TabsTrigger key={value} value={value}>\n            {label}\n          </TabsTrigger>\n        ))}\n      </TabsList>\n      {tabs.map(({ value, content }) => (\n        <TabsContent key={value} value={value}>\n          {content}\n        </TabsContent>\n      ))}\n    </TabsPrimitive.Root>\n  );\n}\n\nexport type TabsListProps = ComponentPropsWithRef<typeof TabsPrimitive.List>;\n\nfunction TabsList({ ref, ...props }: TabsListProps) {\n  return (\n    <TabsPrimitive.List\n      className=\"flex flex-wrap border-b border-(--tabs-border,var(--contrast-100))\"\n      ref={ref}\n      {...props}\n    />\n  );\n}\n\nfunction TabsTrigger({ ref, ...props }: ComponentPropsWithRef<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      className='relative p-4 font-(family-name:--tabs-font-family,var(--font-family-body)) text-sm font-semibold text-(--tabs-text,var(--contrast-500)) transition-colors duration-200 ease-linear after:absolute after:inset-x-0 after:bottom-0 after:h-0.5 after:origin-bottom after:scale-y-0 after:bg-(--tabs-underline-default,var(--contrast-200)) after:transition-all after:duration-200 after:ease-linear after:content-[\"\"] hover:text-(--tabs-text-hover,var(--foreground)) hover:after:scale-y-100 focus-visible:ring-2 focus-visible:ring-(--tabs-focus,var(--primary)) focus-visible:outline-hidden disabled:pointer-events-none disabled:text-(--tabs-text,var(--contrast-500)) data-[state=active]:text-(--tabs-text-active,var(--foreground)) data-[state=active]:after:scale-y-100 data-[state=active]:after:bg-(--tabs-underline-active,var(--primary)) data-[state=inactive]:hover:after:bg-(--tabs-underline-hover,var(--contrast-200))'\n      ref={ref}\n      {...props}\n    />\n  );\n}\n\nfunction TabsContent({ ref, ...props }: ComponentPropsWithRef<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      className=\"focus-visible:ring-2 focus-visible:ring-(--tabs-focus,var(--primary)) focus-visible:ring-offset-2 focus-visible:outline-hidden\"\n      ref={ref}\n      {...props}\n    />\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/primitives/tabs/index.tsx"
    }
  ]
}