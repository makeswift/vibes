{
  "name": "reviews",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "streamable",
    "cursor-pagination",
    "rating",
    "sticky-sidebar-layout",
    "skeleton"
  ],
  "files": [
    {
      "path": "vibes/soul/sections/reviews/index.tsx",
      "content": "import { Stream, Streamable } from '@/vibes/soul/lib/streamable';\nimport { CursorPagination, CursorPaginationInfo } from '@/vibes/soul/primitives/cursor-pagination';\nimport { Rating } from '@/vibes/soul/primitives/rating';\nimport * as Skeleton from '@/vibes/soul/primitives/skeleton';\nimport { StickySidebarLayout } from '@/vibes/soul/sections/sticky-sidebar-layout';\n\ninterface Review {\n  id: string;\n  rating: number;\n  review: string;\n  name: string;\n  date: string;\n}\n\nexport interface ReviewsProps {\n  reviews: Streamable<Review[]>;\n  averageRating: Streamable<number>;\n  totalCount?: Streamable<string>;\n  paginationInfo?: Streamable<CursorPaginationInfo>;\n  nextLabel?: Streamable<string>;\n  previousLabel?: Streamable<string>;\n  emptyStateMessage?: string;\n  reviewsLabel?: string;\n}\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n * :root {\n *   --reviews-font-family: var(--font-family-body);\n *   --reviews-title-font-family: var(--font-family-heading);\n *   --reviews-border: var(--contrast-100);\n *   --reviews-count: var(--contrast-300);\n *   -reviews-average: var(--foreground);\n *   --reviews-name: var(--foreground);\n *   --reviews-review: var(--contrast-500);\n *   --reviews-date: var(--contrast-500);\n *   --reviews-empty-message: var(--foreground);\n * }\n * ```\n */\nexport function Reviews({\n  reviews: streamableReviews,\n  averageRating: streamableAverageRating,\n  totalCount: streamableTotalCount,\n  paginationInfo: streamablePaginationInfo,\n  nextLabel,\n  previousLabel,\n  emptyStateMessage,\n  reviewsLabel = 'Reviews',\n}: Readonly<ReviewsProps>) {\n  return (\n    <Stream fallback={<ReviewsSkeleton reviewsLabel={reviewsLabel} />} value={streamableReviews}>\n      {(reviews) => {\n        if (reviews.length === 0)\n          return <ReviewsEmptyState message={emptyStateMessage} reviewsLabel={reviewsLabel} />;\n\n        return (\n          <StickySidebarLayout\n            className=\"group/reviews font-(family-name:--button-font-family,var(--font-family-body))\"\n            sidebar={\n              <div>\n                <div className=\"mt-0 mb-4 flex items-center gap-x-1.5 font-(family-name:--reviews-title-font-family,var(--font-family-heading)) text-xl font-medium @xl:my-5 @xl:text-2xl\">\n                  <h2>{reviewsLabel}</h2>\n                  <Stream fallback={<TotalCountSkeleton />} value={streamableTotalCount}>\n                    {(totalCount) => (\n                      <p className=\"text-(--reviews-count,var(--contrast-300))\">{totalCount}</p>\n                    )}\n                  </Stream>\n                </div>\n                <div className=\"space-y-2\">\n                  <Stream fallback={<AverageRatingSkeleton />} value={streamableAverageRating}>\n                    {(averageRating) => (\n                      <>\n                        <p className=\"font-(family-name:--reviews-title-font-family,var(--font-family-heading)) text-5xl leading-none tracking-tighter text-(--reviews-average,var(--foreground)) @2xl:text-6xl\">\n                          {averageRating}\n                        </p>\n                        <Rating rating={averageRating} showRating={false} />\n                      </>\n                    )}\n                  </Stream>\n                </div>\n              </div>\n            }\n            sidebarSize=\"md\"\n          >\n            <div className=\"flex-1 border-t border-(--reviews-border,var(--contrast-100))\">\n              {reviews.map(({ id, rating, review, name, date }) => {\n                return (\n                  <div\n                    className=\"border-b border-(--reviews-border,var(--contrast-100)) py-6\"\n                    key={id}\n                  >\n                    <Rating rating={rating} />\n                    <p className=\"mt-5 text-lg font-semibold text-(--reviews-name,var(--foreground))\">\n                      {name}\n                    </p>\n                    <p className=\"mt-2 mb-8 leading-normal text-(--reviews-review,var(--contrast-500))\">\n                      {review}\n                    </p>\n                    <p className=\"text-sm text-(--reviews-date,var(--contrast-500))\">{date}</p>\n                  </div>\n                );\n              })}\n              <Stream value={streamablePaginationInfo}>\n                {(paginationInfo) =>\n                  paginationInfo && (\n                    <CursorPagination\n                      info={paginationInfo}\n                      nextLabel={nextLabel}\n                      previousLabel={previousLabel}\n                      scroll={false}\n                    />\n                  )\n                }\n              </Stream>\n            </div>\n          </StickySidebarLayout>\n        );\n      }}\n    </Stream>\n  );\n}\n\nexport function ReviewsEmptyState({\n  message = 'No reviews have been added for this product',\n  reviewsLabel = 'Reviews',\n}: {\n  message?: string;\n  reviewsLabel?: string;\n}) {\n  return (\n    <StickySidebarLayout\n      sidebar={\n        <div>\n          <div className=\"mt-0 mb-4 flex items-center gap-x-1.5 font-(family-name:--reviews-title-font-family,var(--font-family-heading)) text-xl font-medium @xl:my-5 @xl:text-2xl\">\n            <h2 className=\"\">{reviewsLabel}</h2>\n            <p className=\"text-(--reviews-count,var(--contrast-300))\">0</p>\n          </div>\n          <div className=\"space-y-2\">\n            <p className=\"font-(family-name:--reviews-title-font-family,var(--font-family-heading)) text-5xl leading-none tracking-tighter text-(--reviews-average,var(--foreground)) @2xl:text-6xl\">\n              0\n            </p>\n            <Rating rating={0} showRating={false} />\n          </div>\n        </div>\n      }\n      sidebarSize=\"md\"\n    >\n      <div className=\"flex-1 border-t border-(--reviews-border,var(--contrast-100)) py-12\">\n        <p className=\"text-center text-(--reviews-empty-message,var(--foreground))\">{message}</p>\n      </div>\n    </StickySidebarLayout>\n  );\n}\n\nexport function ReviewsSkeleton({ reviewsLabel = 'Reviews' }: Pick<ReviewsProps, 'reviewsLabel'>) {\n  return (\n    <StickySidebarLayout\n      className=\"group/reviews\"\n      sidebar={\n        <div>\n          <div className=\"mt-0 mb-4 flex items-center gap-x-1.5 font-(family-name:--reviews-title-font-family,var(--font-family-heading)) text-xl font-medium @xl:my-5 @xl:text-2xl\">\n            <h2 className=\"\">{reviewsLabel}</h2>\n            <TotalCountSkeleton />\n          </div>\n          <div className=\"space-y-2\">\n            <AverageRatingSkeleton />\n          </div>\n        </div>\n      }\n      sidebarSize=\"md\"\n    >\n      <Skeleton.Root\n        className=\"flex-1 border-t border-(--reviews-border,var(--contrast-100)) group-has-[[data-pending]]/reviews:animate-pulse\"\n        pending\n      >\n        <div data-pending>\n          {Array.from({ length: 3 }).map((_, index) => (\n            <div\n              className=\"border-b border-(--reviews-border,var(--contrast-100)) py-6\"\n              key={index}\n            >\n              <Skeleton.Box className=\"h-6 w-32 rounded-md\" />\n              <Skeleton.Text characterCount={10} className=\"mt-5 rounded-md text-lg\" />\n              <div className=\"mt-2 text-base\">\n                <Skeleton.Text characterCount=\"full\" className=\"rounded\" />\n                <Skeleton.Text characterCount={70} className=\"rounded\" />\n                <Skeleton.Text characterCount={40} className=\"rounded\" />\n              </div>\n              <Skeleton.Text characterCount={8} className=\"mt-8 rounded-sm text-sm\" />\n            </div>\n          ))}\n        </div>\n      </Skeleton.Root>\n    </StickySidebarLayout>\n  );\n}\n\nfunction TotalCountSkeleton() {\n  return (\n    <Skeleton.Root className=\"w-full group-has-[[data-pending]]/reviews:animate-pulse\" pending>\n      <Skeleton.Text\n        characterCount={3}\n        className=\"rounded-md text-xl @xl:my-5 @xl:text-2xl\"\n        data-pending\n      />\n    </Skeleton.Root>\n  );\n}\n\nfunction AverageRatingSkeleton() {\n  return (\n    <>\n      <Skeleton.Root className=\"w-full group-has-[[data-pending]]/reviews:animate-pulse\" pending>\n        <Skeleton.Text\n          characterCount={2}\n          className=\"rounded-md text-5xl @2xl:text-6xl\"\n          data-pending\n        />\n      </Skeleton.Root>\n      <RatingSkeleton />\n    </>\n  );\n}\n\nfunction RatingSkeleton() {\n  return (\n    <Skeleton.Root className=\"w-full group-has-[[data-pending]]/reviews:animate-pulse\" pending>\n      <Skeleton.Box className=\"h-6 w-32 rounded-md\" data-pending />\n    </Skeleton.Root>\n  );\n}\n",
      "type": "registry:ui",
      "target": "vibes/soul/sections/reviews/index.tsx"
    }
  ]
}