{
  "name": "number-input",
  "type": "registry:ui",
  "dependencies": [
    "clsx",
    "lucide-react"
  ],
  "registryDependencies": [
    "field-error",
    "label"
  ],
  "files": [
    {
      "path": "vibes/soul/form/number-input/index.tsx",
      "content": "'use client';\n\nimport { clsx } from 'clsx';\nimport { Minus, Plus } from 'lucide-react';\nimport * as React from 'react';\n\nimport { FieldError } from '@/vibes/soul/form/field-error';\nimport { Label } from '@/vibes/soul/form/label';\n\n/**\n * This component supports various CSS variables for theming. Here's a comprehensive list, along\n * with their default values:\n *\n * ```css\n *  :root {\n *   --number-input-focus: var(--primary);\n *   --number-input-light-background: var(--background);\n *   --number-input-light-text: var(--foreground);\n *   --number-input-light-icon: var(--contrast-300);\n *   --number-input-light-icon-hover: var(--foreground);\n *   --number-input-light-button-background: var(--background);\n *   --number-input-light-button-background-hover: var(--contrast-100) / 50%;\n *   --number-input-light-button-border: var(--contrast-100);\n *   --number-input-light-button-border-error: var(--error);\n *   --number-input-dark-background: var(--background);\n *   --number-input-dark-text: var(--background);\n *   --number-input-dark-icon: var(--contrast-300);\n *   --number-input-dark-icon-hover: var(--background);\n *   --number-input-dark-button-background: var(--foreground);\n *   --number-input-dark-button-background-hover: var(--contrast-500) / 50%;\n *   --number-input-dark-button-border: var(--contrast-500);\n *   --number-input-dark-button-border-error: var(--error);\n *  }\n * ```\n */\nexport const NumberInput = React.forwardRef<\n  React.ComponentRef<'input'>,\n  Omit<React.ComponentPropsWithoutRef<'input'>, 'id'> & {\n    label?: string;\n    errors?: string[];\n    decrementLabel?: string;\n    incrementLabel?: string;\n    colorScheme?: 'light' | 'dark';\n  }\n>(\n  (\n    {\n      label,\n      className,\n      required,\n      errors,\n      decrementLabel,\n      incrementLabel,\n      disabled = false,\n      colorScheme = 'light',\n      ...rest\n    },\n    ref,\n  ) => {\n    const id = React.useId();\n\n    return (\n      <div className={clsx('space-y-2', className)}>\n        {label != null && label !== '' && (\n          <Label colorScheme={colorScheme} htmlFor={id}>\n            {label}\n          </Label>\n        )}\n        <div\n          className={clsx(\n            'inline-flex items-center rounded-lg border',\n            {\n              light: 'bg-(--number-input-light-background,var(--background))',\n              dark: 'bg-(--number-input-dark-background,var(--foreground))',\n            }[colorScheme],\n            {\n              light:\n                errors && errors.length > 0\n                  ? 'border-(--number-input-light-button-border-error,var(--error))'\n                  : 'border-(--number-input-light-button-border,var(--contrast-100))',\n              dark:\n                errors && errors.length > 0\n                  ? 'border-(--number-input-dark-button-border-error,var(--error))'\n                  : 'border-(--number-input-dark-button-border,var(--contrast-500))',\n            }[colorScheme],\n          )}\n        >\n          <button\n            aria-label={decrementLabel}\n            className={clsx(\n              'group rounded-l-lg p-3.5 focus-visible:ring-2 focus-visible:ring-(--number-input-focus,var(--primary)) focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-30',\n              {\n                light:\n                  'bg-(--number-input-light-button-background,var(--background)) hover:bg-(--number-input-light-button-background-hover,color-mix(in_oklab,var(--contrast-100)_50%,transparent))',\n                dark: 'bg-(--number-input-dark-button-background,var(--foreground)) hover:bg-(--number-input-dark-button-background-hover,color-mix(in_oklab,var(--contrast-500)_50%,transparent))',\n              }[colorScheme],\n            )}\n            disabled={disabled}\n            onClick={(e) => {\n              e.preventDefault();\n\n              const input = e.currentTarget.parentElement?.querySelector('input');\n\n              input?.stepDown();\n              input?.dispatchEvent(new InputEvent('change', { bubbles: true, cancelable: true }));\n            }}\n          >\n            <Minus\n              className={clsx(\n                'transition-colors duration-300',\n                {\n                  light:\n                    'text-(--number-input-light-icon,var(--contrast-300)) group-hover:text-(--number-input-light-icon-hover,var(--foreground))',\n                  dark: 'text-(--number-input-dark-icon,var(--contrast-300)) group-hover:text-(--number-input-dark-icon-hover,var(--background))',\n                }[colorScheme],\n              )}\n              size={18}\n              strokeWidth={1.5}\n            />\n          </button>\n          <input\n            {...rest}\n            className={clsx(\n              'w-8 flex-1 [appearance:textfield] justify-center bg-transparent text-center select-none focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-30 [&::-webkit-inner-spin-button]:appearance-none [&::-webkit-outer-spin-button]:appearance-none',\n              {\n                light: 'text-(--number-input-light-text,var(--foreground))',\n                dark: 'text-(--number-input-dark-text,var(--background))',\n              }[colorScheme],\n            )}\n            disabled={disabled}\n            id={id}\n            ref={ref}\n            type=\"number\"\n          />\n          <button\n            aria-label={incrementLabel}\n            className={clsx(\n              'group rounded-r-lg p-3.5 focus-visible:ring-2 focus-visible:ring-(--number-input-focus,var(--primary)) focus-visible:outline-hidden disabled:cursor-not-allowed disabled:opacity-30',\n              {\n                light:\n                  'bg-(--number-input-light-button-background,var(--background)) hover:bg-(--number-input-light-button-background-hover,color-mix(in_oklab,var(--contrast-100)_50%,transparent))',\n                dark: 'bg-(--number-input-dark-button-background,var(--foreground)) hover:bg-(--number-input-dark-button-background-hover,color-mix(in_oklab,var(--contrast-500)_50%,transparent))',\n              }[colorScheme],\n            )}\n            disabled={disabled}\n            onClick={(e) => {\n              e.preventDefault();\n\n              const input = e.currentTarget.parentElement?.querySelector('input');\n\n              input?.stepUp();\n              input?.dispatchEvent(new InputEvent('change', { bubbles: true, cancelable: true }));\n            }}\n          >\n            <Plus\n              className={clsx(\n                'transition-colors duration-300',\n                {\n                  light:\n                    'text-(--number-input-light-icon,var(--contrast-300)) group-hover:text-(--number-input-light-icon-hover,var(--foreground))',\n                  dark: 'text-(--number-input-dark-icon,var(--contrast-300)) group-hover:text-(--number-input-dark-icon-hover,var(--background))',\n                }[colorScheme],\n              )}\n              size={18}\n              strokeWidth={1.5}\n            />\n          </button>\n        </div>\n        {errors?.map((error) => <FieldError key={error}>{error}</FieldError>)}\n      </div>\n    );\n  },\n);\n\nNumberInput.displayName = 'NumberInput';\n",
      "type": "registry:ui",
      "target": "vibes/soul/form/number-input/index.tsx"
    }
  ]
}